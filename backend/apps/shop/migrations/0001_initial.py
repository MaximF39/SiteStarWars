# Generated by Django 4.1.2 on 2022-11-04 13:51

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseItems',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('class_number', models.IntegerField(verbose_name='Номер класса')),
                ('en_name', models.CharField(max_length=100, verbose_name='En название')),
                ('cost', models.IntegerField(verbose_name='Цена')),
                ('size', models.FloatField(verbose_name='Размер')),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, upload_to='images', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='ItemsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_en', models.CharField(max_length=50)),
                ('type_ru', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Тип',
                'verbose_name_plural': 'Типы',
            },
        ),
        migrations.CreateModel(
            name='Ammo',
            fields=[
                ('baseitems_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.baseitems')),
                ('damage', models.IntegerField(verbose_name='Урон')),
            ],
            options={
                'verbose_name': 'Патрон',
                'verbose_name_plural': 'Патроны',
            },
            bases=('shop.baseitems',),
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('baseitems_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.baseitems')),
                ('reload_time', models.IntegerField()),
                ('energy_cost', models.IntegerField()),
                ('effects', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), null=True, size=None)),
                ('device_type', models.IntegerField()),
                ('restrictions', models.JSONField(null=True)),
            ],
            options={
                'verbose_name': 'Устройство',
                'verbose_name_plural': 'Устройства',
            },
            bases=('shop.baseitems',),
        ),
        migrations.CreateModel(
            name='Engines',
            fields=[
                ('baseitems_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.baseitems')),
                ('hyperjump_radius', models.IntegerField()),
                ('energy_cost', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Двигатель',
                'verbose_name_plural': 'Двигатели',
            },
            bases=('shop.baseitems',),
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('baseitems_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.baseitems')),
                ('effects', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), null=True, size=None)),
            ],
            options={
                'verbose_name': 'Ресурс',
                'verbose_name_plural': 'Ресурсы',
            },
            bases=('shop.baseitems',),
        ),
        migrations.CreateModel(
            name='Ships',
            fields=[
                ('baseitems_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.baseitems')),
                ('max_energy', models.IntegerField()),
                ('weapon_slots', models.IntegerField()),
                ('device_slots', models.IntegerField()),
                ('armor', models.IntegerField()),
                ('shields', models.IntegerField()),
                ('cpu', models.IntegerField()),
                ('radar', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('effects', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), null=True, size=None)),
                ('droid_slots', models.IntegerField()),
                ('restrictions', models.JSONField(null=True)),
                ('max_health', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Корабль',
                'verbose_name_plural': 'Корабли',
            },
            bases=('shop.baseitems',),
        ),
        migrations.CreateModel(
            name='Weapons',
            fields=[
                ('baseitems_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.baseitems')),
                ('auto_shots', models.IntegerField()),
                ('radius', models.IntegerField()),
                ('reload_time', models.IntegerField()),
                ('energy_cost', models.IntegerField()),
                ('min_damage', models.IntegerField()),
                ('max_damage', models.IntegerField()),
                ('need_cpu', models.IntegerField()),
                ('effects', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), null=True, size=None)),
                ('weapon_type', models.IntegerField()),
                ('restrictions', models.JSONField(null=True)),
                ('weapon_ammo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.ammo')),
            ],
            options={
                'verbose_name': 'Оружие',
                'verbose_name_plural': 'Оружия',
            },
            bases=('shop.baseitems',),
        ),
        migrations.CreateModel(
            name='Droids',
            fields=[
                ('baseitems_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.baseitems')),
                ('energy_cost', models.IntegerField()),
                ('armor', models.IntegerField()),
                ('droid_type', models.IntegerField()),
                ('restrictions', models.JSONField(null=True)),
                ('max_health', models.IntegerField()),
                ('droid_weapon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.weapons')),
            ],
            options={
                'verbose_name': 'Дройд',
                'verbose_name_plural': 'Дройды',
            },
            bases=('shop.baseitems',),
        ),
    ]
